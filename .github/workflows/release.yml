name: Automatically tag new release when release PR is merged

# This action will only run when a pull request is closed/merged.
on:
  pull_request:
    types:
      - opened
      - closed

jobs:
  comment-on-open:
    if: github.event.action == 'opened' && startsWith(github.head_ref, 'release')
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Add comment
        uses: peter-evans/create-or-update-comment@a35cf36e5301d70b76f316e867e7788a55a31dae
        with:
          token: ${{ secrets.GHA_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            :warning: This PR will create and tag a release automatically when merged. :robot:

  create-release:
    # Action will be skipped unless we have a successful merge AND the original PR started with release
    # If this condition isn't matched, then github will show the action as skipped. 
    if: github.event.action == 'closed' && github.event.pull_request.merged == true && startsWith(github.head_ref, 'release')
    runs-on: ubuntu-latest
    steps:
      - run: echo "A release branch has been merged with trunk, time to create a new release"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          # We checkout based on the merge_commit_sha trunk so we're acting on post-merge state rather than pre-merge. This is required to grab the version from package.json
          ref: ${{github.event.pull_request.merge_commit_sha}}
      - name: version
        id: version
        run: echo ::set-output name=data::$(jq '.version' package.json -r)


      - name: Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          tag_name: ${{steps.version.outputs.data}}
          name: "Version ${{steps.version.outputs.data}}"
          body: ${{github.event.pull_request.body}}
          target_commitish: ${{github.event.pull_request.merge_commit_sha}}